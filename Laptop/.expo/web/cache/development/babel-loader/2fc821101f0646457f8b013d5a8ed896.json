{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\maste\\\\Desktop\\\\app project\\\\Laptop\\\\AppProject\\\\Laptop\\\\node_modules\\\\react-native-progress-wheel\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment, PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport PropTypes from 'prop-types';\n\nvar AnimatedProgressWheel = function (_PureComponent) {\n  _inherits(AnimatedProgressWheel, _PureComponent);\n\n  var _super = _createSuper(AnimatedProgressWheel);\n\n  function AnimatedProgressWheel() {\n    var _this;\n\n    _classCallCheck(this, AnimatedProgressWheel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      animatedVal: new Animated.Value(0)\n    };\n\n    _this.interpolateAnimVal = function (inputRange, outputRange) {\n      return _this.state.animatedVal.interpolate({\n        inputRange: inputRange,\n        outputRange: outputRange,\n        extrapolate: \"clamp\"\n      });\n    };\n\n    _this.interpolateRotation = function (isSecondHalf) {\n      return _this.interpolateAnimVal(isSecondHalf ? [50, 100] : [0, 50], ['0deg', '180deg']);\n    };\n\n    _this.interpolateRotationTwoOpacity = function () {\n      return _this.interpolateAnimVal([50, 50.01], [0, 1]);\n    };\n\n    _this.interpolateColorOpacity = function () {\n      return _this.interpolateAnimVal([0, 100], [0, 1]);\n    };\n\n    _this.animateTo = function (toValue) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.duration;\n      var easing = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Easing.easeInOut;\n      Animated.timing(_this.state.animatedVal, {\n        toValue: toValue,\n        duration: duration,\n        easing: easing,\n        useNativeDriver: true\n      }).start(function (status) {\n        return _this.props.onAnimationComplete(status);\n      });\n    };\n\n    _this.resetAnimation = function () {\n      var progress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.progress;\n      return _this.state.animatedVal.setValue(progress);\n    };\n\n    _this.circleHalf = function (styles, isSecondHalf, color) {\n      return React.createElement(Animated.View, {\n        style: [styles.container, {\n          opacity: isSecondHalf ? _this.interpolateRotationTwoOpacity() : 1,\n          transform: [{\n            rotate: _this.interpolateRotation(isSecondHalf)\n          }]\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: [styles.halfCircle, isSecondHalf && {\n          bottom: 0,\n          transform: [{\n            rotate: '180deg'\n          }]\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: [styles.circleArc, {\n          borderColor: color\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 1\n        }\n      })));\n    };\n\n    _this.renderLoader = function (styles) {\n      var color = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.color;\n      return React.createElement(Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: styles.background,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 1\n        }\n      }), _this.circleHalf(styles, false, color), React.createElement(View, {\n        style: styles.halfCircle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: styles.cutOff,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }\n      })), React.createElement(View, {\n        style: styles.secondHalfContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 1\n        }\n      }, _this.circleHalf(styles, true, color)));\n    };\n\n    return _this;\n  }\n\n  _createClass(AnimatedProgressWheel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          animateFromValue = _this$props.animateFromValue,\n          progress = _this$props.progress;\n      var animatedVal = this.state.animatedVal;\n\n      if (animateFromValue >= 0) {\n        animatedVal.setValue(animateFromValue);\n        this.animateTo(progress);\n      } else {\n        animatedVal.setValue(progress);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.progress !== this.props.progress) {\n        this.state.animatedVal.setValue(this.props.progress);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styles = generateStyles(this.props);\n      var fullColor = this.props.fullColor;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, this.renderLoader(styles), fullColor && React.createElement(Animated.View, {\n        style: {\n          position: 'absolute',\n          opacity: this.interpolateColorOpacity()\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 5\n        }\n      }, this.renderLoader(styles, fullColor)));\n    }\n  }]);\n\n  return AnimatedProgressWheel;\n}(PureComponent);\n\nAnimatedProgressWheel.defaultProps = {\n  color: 'white',\n  backgroundColor: 'gray',\n  size: 200,\n  width: 25,\n  progress: 0,\n  duration: 600,\n  animateFromValue: -1,\n  fullColor: null,\n  onAnimationComplete: function onAnimationComplete() {}\n};\nAnimatedProgressWheel.propTypes = {\n  color: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  size: PropTypes.number,\n  width: PropTypes.number,\n  progress: PropTypes.number,\n  duration: PropTypes.number,\n  animateFromValue: PropTypes.number,\n  fullColor: PropTypes.string,\n  onAnimationComplete: PropTypes.func\n};\n\nvar generateStyles = function generateStyles(_ref) {\n  var size = _ref.size,\n      width = _ref.width,\n      color = _ref.color,\n      backgroundColor = _ref.backgroundColor,\n      containerColor = _ref.containerColor;\n  return StyleSheet.create({\n    container: {\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      overflow: 'hidden'\n    },\n    background: {\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      borderWidth: width,\n      borderColor: backgroundColor,\n      position: 'absolute'\n    },\n    cutOff: {\n      backgroundColor: containerColor,\n      width: size,\n      height: size,\n      borderWidth: width,\n      borderColor: backgroundColor,\n      borderRadius: size / 2\n    },\n    secondHalfContainer: {\n      position: 'absolute'\n    },\n    halfCircle: {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n      position: 'absolute'\n    },\n    circleArc: {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderRadius: size / 2,\n      borderWidth: width\n    }\n  });\n};\n\nexport default AnimatedProgressWheel;","map":{"version":3,"sources":["C:/Users/maste/Desktop/app project/Laptop/AppProject/Laptop/node_modules/react-native-progress-wheel/index.js"],"names":["React","Fragment","PureComponent","PropTypes","AnimatedProgressWheel","state","animatedVal","Animated","Value","interpolateAnimVal","inputRange","outputRange","interpolate","extrapolate","interpolateRotation","isSecondHalf","interpolateRotationTwoOpacity","interpolateColorOpacity","animateTo","toValue","duration","props","easing","Easing","easeInOut","timing","useNativeDriver","start","status","onAnimationComplete","resetAnimation","progress","setValue","circleHalf","styles","color","container","opacity","transform","rotate","halfCircle","bottom","circleArc","borderColor","renderLoader","background","cutOff","secondHalfContainer","animateFromValue","prevProps","generateStyles","fullColor","position","defaultProps","backgroundColor","size","width","propTypes","string","number","func","containerColor","StyleSheet","create","height","borderRadius","overflow","borderWidth"],"mappings":"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","sourcesContent":["import React, {Fragment, PureComponent} from 'react';\r\nimport {View, Animated, StyleSheet, Easing} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AnimatedProgressWheel extends PureComponent {\r\n\r\n    state = {\r\n        animatedVal: new Animated.Value(0),\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {animateFromValue, progress} = this.props;\r\n        const {animatedVal} = this.state;\r\n\r\n        if (animateFromValue >= 0) {\r\n            animatedVal.setValue(animateFromValue);\r\n            this.animateTo(progress);\r\n        } else {\r\n            animatedVal.setValue(progress);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.progress !== this.props.progress) {\r\n            this.state.animatedVal.setValue(this.props.progress);\r\n        }\r\n    }\r\n\r\n    interpolateAnimVal = (inputRange, outputRange) =>\r\n        this.state.animatedVal.interpolate({\r\n            inputRange,\r\n            outputRange,\r\n            extrapolate: \"clamp\",\r\n        });\r\n\r\n    interpolateRotation = (isSecondHalf) =>\r\n        this.interpolateAnimVal(isSecondHalf ? [50, 100] : [0, 50], ['0deg', '180deg']);\r\n\r\n    interpolateRotationTwoOpacity = () =>\r\n        this.interpolateAnimVal([50, 50.01], [0, 1]);\r\n\r\n    interpolateColorOpacity = () =>\r\n        this.interpolateAnimVal([0, 100], [0, 1]);\r\n\r\n\r\n    animateTo = (toValue, duration = this.props.duration, easing = Easing.easeInOut) => {\r\n        Animated.timing(this.state.animatedVal, {\r\n            toValue,\r\n            duration,\r\n            easing,\r\n            useNativeDriver: true,\r\n        }).start(status => this.props.onAnimationComplete(status));\r\n    }\r\n\r\n    resetAnimation = (progress = this.props.progress) =>\r\n        this.state.animatedVal.setValue(progress)\r\n\r\n    circleHalf = (styles, isSecondHalf, color) =>\r\n<Animated.View style={[\r\n            styles.container,\r\n{\r\n    opacity: isSecondHalf ? this.interpolateRotationTwoOpacity() : 1,\r\n    transform: [{rotate: this.interpolateRotation(isSecondHalf)}]\r\n}]}>\r\n<View style={[styles.halfCircle, isSecondHalf && {\r\n    bottom: 0,\r\n    transform: [{rotate: '180deg'}]\r\n}]}>\r\n<View style={[styles.circleArc, {borderColor: color}]}/>\r\n</View>\r\n</Animated.View>;\r\n\r\nrenderLoader = (styles, color = this.props.color) =>\r\n<Fragment>\r\n<View style={styles.background}/>\r\n{this.circleHalf(styles, false, color)}\r\n<View style={styles.halfCircle}>\r\n    <View style={styles.cutOff}/>\r\n</View>\r\n<View style={styles.secondHalfContainer}>\r\n    {this.circleHalf(styles, true, color)}\r\n    </View>\r\n    </Fragment>;\r\n\r\nrender() {\r\n    const styles = generateStyles(this.props);\r\n    const {fullColor} = this.props;\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n        {this.renderLoader(styles)}\r\n    {fullColor && (\r\n    <Animated.View style={{position: 'absolute', opacity: this.interpolateColorOpacity()}}>\r\n        {this.renderLoader(styles, fullColor)}\r\n    </Animated.View>\r\n    )}\r\n</View>\r\n);\r\n}\r\n}\r\n\r\nAnimatedProgressWheel.defaultProps = {\r\n    color: 'white',\r\n    backgroundColor: 'gray',\r\n    size: 200,\r\n    width: 25,\r\n    progress: 0,\r\n    duration: 600,\r\n    animateFromValue: -1,\r\n    fullColor: null,\r\n    onAnimationComplete: () => {},\r\n};\r\n\r\nAnimatedProgressWheel.propTypes = {\r\n    color: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    size: PropTypes.number,\r\n    width: PropTypes.number,\r\n    progress: PropTypes.number,\r\n    duration: PropTypes.number,\r\n    animateFromValue: PropTypes.number,\r\n    fullColor: PropTypes.string,\r\n    onAnimationComplete: PropTypes.func,\r\n};\r\n\r\nconst generateStyles = ({size, width, color, backgroundColor, containerColor}) =>\r\n    StyleSheet.create({\r\n        container: {\r\n            width: size,\r\n            height: size,\r\n            borderRadius: size / 2,\r\n            overflow: 'hidden',\r\n        },\r\n        background: {\r\n            width: size,\r\n            height: size,\r\n            borderRadius: size / 2,\r\n            borderWidth: width,\r\n            borderColor: backgroundColor,\r\n            position: 'absolute',\r\n        },\r\n        cutOff: {\r\n            backgroundColor: containerColor,\r\n            width: size,\r\n            height: size,\r\n            borderWidth: width,\r\n            borderColor: backgroundColor,\r\n            borderRadius: size / 2,\r\n        },\r\n        secondHalfContainer: {\r\n            position: 'absolute',\r\n        },\r\n        halfCircle: {\r\n            width: size,\r\n            height: size / 2,\r\n            overflow: 'hidden',\r\n            position: 'absolute'\r\n        },\r\n        circleArc: {\r\n            width: size,\r\n            height: size,\r\n            borderColor: color,\r\n            borderRadius: size / 2,\r\n            borderWidth: width,\r\n        },\r\n    });\r\n\r\nexport default AnimatedProgressWheel;\r\n"]},"metadata":{},"sourceType":"module"}