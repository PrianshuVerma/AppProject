{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/harshilpatel/Documents/GitHub/AppProject/Laptop/screens/Register.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { db } from \"./config\";\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { dataArray } from \"./EmailDataBase\";\n\nvar addItem = function addItem(props, email, username, pass) {\n  if (email != '' && username != '' && pass != '') {\n    db.ref('/Users').push({\n      Email: email,\n      UserName: username,\n      Password: pass\n    });\n    props.navigate('Search Page', {\n      paramKey: username\n    });\n  } else {\n    if (email == '') {\n      alert('Please enter Valid Email');\n    } else if (username == '') {\n      alert('Please enter Valid Username');\n    } else {\n      alert('Please enter Valid Password');\n    }\n  }\n};\n\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setusername = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pass1 = _useState6[0],\n      setpass1 = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pass2 = _useState8[0],\n      setpass2 = _useState8[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.circle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"./images/logo.png\"),\n    style: styles.logo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.head,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.username,\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(text) {\n      return setemail(text);\n    },\n    placeholderTextColor: \"gray\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.username,\n    onChangeText: function onChangeText(text) {\n      return setusername(text);\n    },\n    placeholder: \"Username\",\n    placeholderTextColor: \"gray\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.password,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setpass1(text);\n    },\n    placeholderTextColor: \"gray\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.password,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setpass2(text);\n    },\n    placeholderTextColor: \"gray\",\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return addItem(navigation, email, username, pass1);\n    },\n    style: styles.signUpBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.signIntext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"))), React.createElement(View, {\n    style: styles.logInView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.logInText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return alert(JSON.stringify(dataArray[1].Email));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.logIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \" Login here \"))));\n};\n\nvar styles = StyleSheet.create({\n  circle: {\n    width: 180,\n    height: 180,\n    borderRadius: 180 / 2,\n    backgroundColor: \"#0B0C10\",\n    borderColor: '#66FCF1',\n    borderWidth: 1,\n    alignSelf: 'center',\n    marginTop: 100,\n    alignContent: \"center\",\n    justifyContent: \"center\"\n  },\n  logo: {\n    alignSelf: 'center',\n    height: 100,\n    width: 180,\n    resizeMode: \"contain\"\n  },\n  signUpBtn: {\n    alignSelf: 'center',\n    justifyContent: 'center',\n    width: 300,\n    height: 50,\n    borderRadius: 30,\n    marginTop: 25,\n    backgroundColor: \"#0B0C10\",\n    borderColor: \"#66FCF1\",\n    borderWidth: 1\n  },\n  signIntext: {\n    justifyContent: 'center',\n    textAlign: 'center',\n    fontFamily: \"Verdana-Bold\",\n    fontSize: 20,\n    color: '#fff5ee'\n  },\n  logInText: {\n    fontFamily: \"Verdana\",\n    fontSize: 15,\n    color: 'gray'\n  },\n  logInView: {\n    flexDirection: 'row',\n    marginTop: 50,\n    alignSelf: 'center'\n  },\n  logIn: {\n    fontFamily: \"Verdana\",\n    fontSize: 15,\n    color: '#66FCF1'\n  },\n  container: {\n    flex: 1,\n    alignContent: 'center',\n    flexDirection: \"column\",\n    backgroundColor: '#0B0C10'\n  },\n  head: {\n    marginLeft: 0,\n    flexDirection: \"column\",\n    alignSelf: 'center',\n    marginTop: 50\n  },\n  horizontal: {\n    marginTop: 300,\n    alignSelf: 'center',\n    flexDirection: \"row\"\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  text: {\n    textAlign: 'left',\n    fontFamily: \"Verdana-Bold\",\n    fontSize: 40,\n    color: \"#66FCF1\",\n    alignSelf: 'flex-start'\n  },\n  signintext: {\n    alignSelf: \"center\",\n    fontFamily: \"Verdana-Bold\",\n    fontSize: 20,\n    color: '#000000'\n  },\n  inputContainer: {\n    flex: 3,\n    maxHeight: 45,\n    width: 350,\n    borderRadius: 10,\n    flexDirection: 'row',\n    backgroundColor: '#212121',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    color: 'white',\n    marginTop: 25,\n    paddingTop: 15,\n    paddingBottom: 10,\n    marginBottom: 25,\n    alignSelf: 'center',\n    fontFamily: 'Verdana'\n  },\n  input: {\n    flex: 3,\n    maxHeight: 45,\n    width: 350,\n    borderRadius: 10,\n    flexDirection: 'row',\n    backgroundColor: '#212121',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    color: 'white',\n    marginBottom: 20,\n    paddingTop: 15,\n    paddingBottom: 10,\n    alignSelf: 'center',\n    fontFamily: 'Verdana'\n  },\n  username: {\n    flex: 1,\n    fontSize: 14,\n    borderColor: '#66FCF1',\n    borderBottomWidth: 1,\n    color: 'white',\n    fontFamily: 'Verdana'\n  },\n  password: {\n    flex: 1,\n    fontSize: 14,\n    borderColor: '#66FCF1',\n    borderBottomWidth: 1,\n    color: 'white',\n    fontFamily: 'Verdana'\n  }\n});\nexport default Register;","map":{"version":3,"sources":["/Users/harshilpatel/Documents/GitHub/AppProject/Laptop/screens/Register.js"],"names":["React","useState","Icon","db","firebase","dataArray","addItem","props","email","username","pass","ref","push","Email","UserName","Password","navigate","paramKey","alert","Register","navigation","setemail","setusername","pass1","setpass1","pass2","setpass2","styles","container","circle","require","logo","head","text","inputContainer","input","password","signUpBtn","signIntext","logInView","logInText","JSON","stringify","logIn","StyleSheet","create","width","height","borderRadius","backgroundColor","borderColor","borderWidth","alignSelf","marginTop","alignContent","justifyContent","resizeMode","textAlign","fontFamily","fontSize","color","flexDirection","flex","marginLeft","horizontal","image","signintext","maxHeight","alignItems","paddingHorizontal","paddingTop","paddingBottom","marginBottom","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { View, Text, StyleSheet, Image, TouchableOpacity, TextInput, Alert } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport {db} from './config'\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport {dataArray} from './EmailDataBase'\n\n\nconst addItem = (props, email, username, pass) => {\n\n//also add in something to make sure their account does not exist, time permitting\n\n  if (email != '' && username != ''&& pass != '') {\n\n    db.ref('/Users').push({\n    \n      Email: email,\n      UserName: username,\n      Password: pass\n    });\n\n    props.navigate('Search Page', { paramKey: username,})\n  }\n\n  else{\n    if (email == '') {\n      alert ('Please enter Valid Email')\n      // alert for the email\n    }\n\n    else if (username == '') {\n      // alert for username\n      alert ('Please enter Valid Username')\n    }\n\n    else {\n      // alert for the password being empty\n      alert ('Please enter Valid Password')\n    }\n   }\n  }\n\n\nconst Register = ({navigation}) => {\n\n  const [email, setemail] = useState('');\n\n  const [username, setusername] = useState('');\n\n  const [pass1, setpass1] = useState('');\n\n  const [pass2, setpass2] = useState('');\n\n  return (\n\n\n\n    <View style={styles.container}>\n\n      <View style = {styles.circle}> \n        <Image source={require('./images/logo.png')} style={styles.logo} />\n      </View>\n\n      <View style = {styles.head}> \n          <Text style ={styles.text}>Sign Up</Text>\n      </View>\n\n      <View style = {styles.inputContainer}> \n          <TextInput\n          style = {styles.username}\n          placeholder = 'Email'\n          onChangeText = {text => setemail(text)}\n          placeholderTextColor = 'gray'/> \n      </View>\n\n      <View style = {styles.input}> \n          <TextInput\n          style = {styles.username}\n          onChangeText = {text => setusername(text)}\n          placeholder = 'Username'\n          placeholderTextColor = 'gray'/> \n      </View>\n\n      <View style = {styles.input}> \n          <TextInput\n          style = {styles.password}\n          placeholder = 'Password'\n          onChangeText = {text => setpass1(text)}\n          placeholderTextColor = 'gray'\n          secureTextEntry = {true}/> \n      </View>\n\n      <View style = {styles.input}> \n          <TextInput\n          style = {styles.password}\n          placeholder = 'Confirm Password'\n          // over here add a function to make sure that the passwords are the same\n          onChangeText = {text => setpass2(text)}\n          placeholderTextColor = 'gray'\n          secureTextEntry = {true}/> \n      </View>\n\n      <View>\n\n        <TouchableOpacity \n            onPress={ () => addItem(navigation, email, username, pass1)} \n            style={styles.signUpBtn}>\n            <Text style={styles.signIntext}>Sign Up</Text>\n        </TouchableOpacity>\n\n      </View>\n\n      <View style ={styles.logInView}>\n\n        <Text style={styles.logInText}>\n          Already have an account?\n        </Text>\n\n        <TouchableOpacity \n          //onPress={() => navigation.navigate('Home Page')} \n          onPress={() => alert(JSON.stringify(dataArray[1].Email))}\n          >\n          <Text style = {styles.logIn}> Login here </Text>\n        </TouchableOpacity>\n\n\n      </View>\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n\n    circle: {\n      width: 180,\n      height: 180,\n      borderRadius: 180 / 2,\n      backgroundColor: \"#0B0C10\",\n      borderColor: '#66FCF1',\n      borderWidth: 1,\n      alignSelf: 'center',\n      marginTop: 100,\n      alignContent: \"center\",\n      //marginBottom: 50\n      justifyContent: \"center\"\n      },\n\n    logo: {\n    \n      alignSelf: 'center',\n      //marginRight: 225,\n      height: 100,\n      width: 180,\n      resizeMode: \"contain\"\n      //flexDirection: 'row'\n    },\n\n    signUpBtn:{\n      alignSelf:'center',\n      justifyContent: 'center',\n      width: 300,\n      height: 50,\n      borderRadius: 30,\n      marginTop: 25,\n      //marginBottom: 75,     \n      backgroundColor: \"#0B0C10\",\n      borderColor: \"#66FCF1\",\n      borderWidth: 1\n      //borderWidth: 1,   \n    },\n    \n    signIntext:{\n      justifyContent: 'center',\n      textAlign: 'center',\n      fontFamily: \"Verdana-Bold\",\n      fontSize: 20,\n      color: '#fff5ee'\n      //fontWeight: 'bold'\n    },\n\n    logInText:{\n\n        fontFamily: \"Verdana\",\n        fontSize: 15,\n        color: 'gray',\n      },\n  \n    logInView: {\n      \n      flexDirection: 'row', \n      marginTop: 50, \n      alignSelf :'center'\n    },\n\n    logIn: {\n\n      fontFamily: \"Verdana\",\n      fontSize: 15,\n      color: '#66FCF1',\n    },\n\n    container: {\n      flex: 1,\n      alignContent: 'center',\n      flexDirection: \"column\",\n      backgroundColor: '#0B0C10',\n    },\n  \n    head: {\n        marginLeft: 0,\n        flexDirection: \"column\",\n        alignSelf: 'center',\n        marginTop: 50\n      },\n\n    horizontal: {\n      marginTop: 300,\n      alignSelf: 'center',\n      flexDirection: \"row\"\n    },\n\n    image: {\n        flex: 1,\n        resizeMode: \"cover\",\n        justifyContent: \"center\"\n    },\n\n    text:{\n        textAlign: 'left',\n        fontFamily: \"Verdana-Bold\",\n        fontSize: 40,\n        color: \"#66FCF1\",\n        alignSelf: 'flex-start'\n    },\n\n    signintext:{\n      alignSelf: \"center\",\n      fontFamily: \"Verdana-Bold\",\n      fontSize: 20,\n      color: '#000000'\n    },\n \n\n    inputContainer: {\n      flex: 3,\n      maxHeight: 45,\n      width: 350,\n      borderRadius: 10,\n      flexDirection: 'row',\n      backgroundColor: '#212121',\n      alignItems: 'center',\n      paddingHorizontal: 20,\n      color: 'white',\n      marginTop: 25,\n      paddingTop: 15,\n      paddingBottom: 10,\n      marginBottom: 25,\n      //marginLeft: 35,\n      alignSelf: 'center',\n      fontFamily: 'Verdana',\n    },\n\n    input: {\n      flex: 3,\n      maxHeight: 45,\n      width: 350,\n      borderRadius: 10,\n      flexDirection: 'row',\n      backgroundColor: '#212121',\n      alignItems: 'center',\n      paddingHorizontal: 20,\n      color: 'white',\n      marginBottom: 20,\n      paddingTop: 15,\n      paddingBottom: 10,\n      //marginLeft: 35,\n      alignSelf: 'center',\n      fontFamily: 'Verdana',\n\n    },\n    \n    username: {\n\n      flex:1, \n      fontSize: 14, \n      borderColor: '#66FCF1',\n      borderBottomWidth: 1, \n      color: 'white', \n      fontFamily: 'Verdana'\n\n    },\n    password: {\n\n      flex:1, \n      fontSize: 14, \n      borderColor: '#66FCF1',\n      borderBottomWidth: 1, \n      color: 'white',\n      fontFamily: 'Verdana'\n\n    },\n  });\n\n  export default Register;"]},"metadata":{},"sourceType":"module"}