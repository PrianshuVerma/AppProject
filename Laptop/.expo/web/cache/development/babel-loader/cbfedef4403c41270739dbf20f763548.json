{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/prianshu/Documents/GitHub/AppProject/Laptop/screens/tester.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker } from '@react-native-picker/picker';\n\nvar DropDown = function (_React$Component) {\n  _inherits(DropDown, _React$Component);\n\n  var _super = _createSuper(DropDown);\n\n  function DropDown(props) {\n    var _this;\n\n    _classCallCheck(this, DropDown);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      modalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(DropDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (Platform.OS === 'android') {\n        return React.createElement(Picker, {\n          selectedValue: this.props.value,\n          onValueChange: this.props.onValueChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 5\n          }\n        }, this.props.items.map(function (i, index) {\n          return React.createElement(Picker.Item, {\n            key: index,\n            label: i.label,\n            value: i.value,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 9\n            }\n          });\n        }));\n      } else {\n        var selectedItem = this.props.items.find(function (i) {\n          return i.value === _this2.props.value;\n        });\n        var selectedLabel = selectedItem ? selectedItem.label : '';\n        return React.createElement(View, {\n          style: styles.inputContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 5\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.setState({\n              modalVisible: true\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 7\n          }\n        }, React.createElement(TextInput, {\n          pointerEvents: \"none\",\n          style: styles.input,\n          editable: false,\n          placeholder: \"Select language\",\n          onChangeText: function onChangeText(searchString) {\n            _this2.setState({\n              searchString: searchString\n            });\n          },\n          value: selectedLabel,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }\n        })), React.createElement(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: this.state.modalVisible,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }\n        }, React.createElement(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            return _this2.setState({\n              modalVisible: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: styles.modalContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.buttonContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'blue'\n          },\n          onPress: function onPress() {\n            return _this2.setState({\n              modalVisible: false\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }\n        }, \"Done\")), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, React.createElement(Picker, {\n          selectedValue: this.props.value,\n          onValueChange: this.props.onValueChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }, this.props.items.map(function (i, index) {\n          return React.createElement(Picker.Item, {\n            key: index,\n            label: i.label,\n            value: i.value,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }\n          });\n        })))))));\n      }\n    }\n  }]);\n\n  return DropDown;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  content: {\n    marginLeft: 15,\n    marginRight: 15,\n    marginBottom: 5,\n    alignSelf: 'stretch',\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    borderBottomColor: 'gray',\n    borderBottomWidth: 1\n  },\n  input: {\n    height: 40,\n    paddingLeft: 8\n  },\n  modalContainer: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    backgroundColor: '#fff'\n  },\n  buttonContainer: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    padding: 4,\n    backgroundColor: '#fff'\n  }\n});\nexport default tester;","map":{"version":3,"sources":["/Users/prianshu/Documents/GitHub/AppProject/Laptop/screens/tester.js"],"names":["React","Picker","DropDown","props","state","modalVisible","Platform","OS","value","onValueChange","items","map","i","index","label","selectedItem","find","selectedLabel","styles","inputContainer","setState","input","searchString","modalContainer","buttonContainer","color","Component","StyleSheet","create","container","flex","justifyContent","alignItems","content","marginLeft","marginRight","marginBottom","alignSelf","borderBottomColor","borderBottomWidth","height","paddingLeft","position","bottom","width","backgroundColor","flexDirection","padding","tester"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Modal,\n  TouchableWithoutFeedback,\n  Text,\n  StyleSheet,\n  Platform,\n  View,\n  TextInput,\n  TouchableOpacity\n} from 'react-native';\nimport {Picker} from '@react-native-picker/picker';\n\nclass DropDown extends React.Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    modalVisible: false,\n  };\n}\nrender() {\n  if (Platform.OS === 'android') {\n    return (\n    <Picker\n      selectedValue={this.props.value}\n      onValueChange={this.props.onValueChange}>\n      {this.props.items.map((i, index) => (\n        <Picker.Item key={index} label={i.label} value={i.value} />\n      ))}\n    </Picker>\n  );\n} else {\n  const selectedItem = this.props.items.find(\n    i => i.value === this.props.value\n  );\n  const selectedLabel = selectedItem ? selectedItem.label : '';\n  return (\n    <View style={styles.inputContainer}>\n      <TouchableOpacity\n        onPress={() => this.setState({ modalVisible: true })}>\n\n        <TextInput\n          pointerEvents=\"none\"\n          style={styles.input}\n          editable={false}\n          placeholder=\"Select language\"\n          onChangeText={searchString => {\n            this.setState({ searchString });\n          }}\n          value={selectedLabel}\n        />\n      </TouchableOpacity>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={this.state.modalVisible}>\n        <TouchableWithoutFeedback\n          onPress={() => this.setState({ modalVisible: false })}>\n          <View style={styles.modalContainer}>\n            <View style={styles.buttonContainer}>\n              <Text\n                style={{ color: 'blue' }}\n                onPress={() => this.setState({ modalVisible: false })}>\n                Done\n              </Text>\n            </View>\n            <View>\n              <Picker\n                selectedValue={this.props.value}\n                onValueChange={this.props.onValueChange}>\n                {this.props.items.map((i, index) => (\n                  <Picker.Item\n                    key={index}\n                    label={i.label}\n                    value={i.value}\n                  />\n                ))}\n              </Picker>\n            </View>\n          </View>\n        </TouchableWithoutFeedback>\n      </Modal>\n    </View>\n  );\n}\n}\n}\n\nconst styles = StyleSheet.create({\n  container: {\n  flex: 1,\n  justifyContent: 'center',\n  alignItems: 'center',\n},\ncontent: {\n  marginLeft: 15,\n  marginRight: 15,\n  marginBottom: 5,\n  alignSelf: 'stretch',\n  justifyContent: 'center',\n},\ninputContainer: {\n  borderBottomColor: 'gray',\n  borderBottomWidth: 1\n},\ninput: {\n  height: 40,\n  paddingLeft: 8\n},\nmodalContainer: {\n  position: 'absolute',\n  bottom: 0,\n  width: '100%',\n  backgroundColor: '#fff',\n},\nbuttonContainer: {\n  justifyContent: 'flex-end',\n  flexDirection: 'row',\n  padding: 4,\n  backgroundColor: '#fff',\n},\n});\n\nexport default tester"]},"metadata":{},"sourceType":"module"}